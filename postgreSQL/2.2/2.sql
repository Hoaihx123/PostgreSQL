-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Gallery"
(
    id integer,
    name character varying(64) NOT NULL,
    PRIMARY KEY (id),
	CONSTRAINT uni_name UNIQUE (name)

);

CREATE TABLE IF NOT EXISTS public."Prices_tickets"
(
    id integer,
    type character varying NOT NULL,
    price integer NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT uni_type UNIQUE (type),
	CONSTRAINT price_check CHECK(price>0)
);

CREATE TABLE IF NOT EXISTS public."Exhibits"
(
    id integer,
    name character varying(64) NOT NULL,
    short_describe character varying(128),
    insurance_value integer NOT NULL,
    century integer NOT NULL,
    collection_id integer NOT NULL,
    height numeric(6,2),
    weight numeric(6,2),
    length numeric(6,2),
    tempe_max numeric(5,2),
    tempe_min numeric(5,2),
    humidity_max numeric(5,2),
    humidity_min numeric(5,2),
    PRIMARY KEY (id),
	CONSTRAINT uni_name UNIQUE (name),
	CONSTRAINT check_h CHECK(height>0),
	CONSTRAINT check_w CHECK(weight>0),
	CONSTRAINT check_l CHECK(length>0),
	CONSTRAINT check_humi CHECK(humidity_max>=humidity_min),
	CONSTRAINT check_temp CHECK(tempe_max>=tempe_min)
);

CREATE TABLE IF NOT EXISTS public."Collections"
(
    id integer,
    name character varying(64) NOT NULL,
    short_describe character varying(128),
    PRIMARY KEY (id),
    CONSTRAINT uni_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."Collection_gallery"
(
    id integer,
    gallery_id integer NOT NULL,
    collection_id integer NOT NULL,
    tstart date NOT NULL,
    tfinish date,
    PRIMARY KEY (id),
	CONSTRAINT check_time CHECK(tstart<tfinish)
);

CREATE TABLE IF NOT EXISTS public."Collection_gallery_Exhibits"
(
    "Collection_gallery_id" integer NOT NULL,
    "Exhibits_id" integer NOT NULL,
	CONSTRAINT uni_col_ex UNIQUE("Collection_gallery_id","Exhibits_id")
);

CREATE TABLE IF NOT EXISTS public."Gallery_Prices_tickets"
(
    "Gallery_id" integer,
    "Prices_tickets_id" integer,
	CONSTRAINT uni_gal_pri UNIQUE("Gallery_id","Prices_tickets_id")
);

ALTER TABLE IF EXISTS public."Exhibits"
    ADD FOREIGN KEY (collection_id)
    REFERENCES public."Collections" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Collection_gallery"
    ADD FOREIGN KEY (gallery_id)
    REFERENCES public."Gallery" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Collection_gallery"
    ADD FOREIGN KEY (collection_id)
    REFERENCES public."Collections" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Collection_gallery_Exhibits"
    ADD FOREIGN KEY ("Collection_gallery_id")
    REFERENCES public."Collection_gallery" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Collection_gallery_Exhibits"
    ADD FOREIGN KEY ("Exhibits_id")
    REFERENCES public."Exhibits" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Gallery_Prices_tickets"
    ADD FOREIGN KEY ("Gallery_id")
    REFERENCES public."Gallery" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Gallery_Prices_tickets"
    ADD FOREIGN KEY ("Prices_tickets_id")
    REFERENCES public."Prices_tickets" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;